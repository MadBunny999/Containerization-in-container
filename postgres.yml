apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
  labels:
    app: postgres
data:
  POSTGRES_DB: "airflow"
  POSTGRES_USER: "airflow"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  labels:
    app: postgres
type: Opaque
stringData:
  POSTGRES_PASSWORD: "airflow"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-container
          image: postgres
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-configmap
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec: 
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U airflow
            periodSeconds: 30
          readinessProbe:
            exec: 
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U airflow
            periodSeconds: 10
      volumes:
      - name: postgres-volume
        hostPath:
          path: /home/daniil/programming/Containerization-in-container/db/data
